byte CLEAR[] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

byte SUN[] = { 0x24, 0x00, 0x99, 0x24, 0x24, 0x99, 0x00, 0x24 };
byte CLOUD[] = { 0x38, 0x44, 0x82, 0x81, 0x7e, 0x00, 0x00, 0x00 };

byte SUN_SEQUENCE[4][8] = {
  { 0x10, 0x42, 0x18, 0x25, 0xa4, 0x18, 0x42, 0x08 },
  { 0x08, 0x42, 0x18, 0xa4, 0x25, 0x18, 0x42, 0x10 },
  { 0x10, 0x42, 0x18, 0x25, 0xa4, 0x18, 0x42, 0x08 },
  { 0x08, 0x42, 0x18, 0xa4, 0x25, 0x18, 0x42, 0x10 }
};

byte RAIN_SEQUENCE[4][8] = {
  { 0x1c, 0x3e, 0x3e, 0xff, 0x92, 0x00, 0x49, 0x00 },
  { 0x1c, 0x3e, 0x3e, 0xff, 0x00, 0x92, 0x00, 0x49 },
  { 0x1c, 0x3e, 0x3e, 0xff, 0x49, 0x00, 0x92, 0x00 },
  { 0x1c, 0x3e, 0x3e, 0xff, 0x00, 0x49, 0x00, 0x92 }
};

byte EAT_SEQUENCE[4][8] = {
  { 0x00, 0xe0, 0x50, 0x11, 0x32, 0x47, 0x35, 0x17 },
  { 0x00, 0x00, 0xe0, 0x50, 0x10, 0x13, 0x75, 0x17 },
  { 0x00, 0xe0, 0x50, 0x10, 0x30, 0x40, 0x31, 0x13 },
  { 0x00, 0x00, 0xe0, 0x50, 0x10, 0x10, 0x70, 0x10 }
};

byte SLEEP_SEQUENCE[4][8] = {
  { 0x00, 0x00, 0x00, 0x00, 0x7e, 0x81, 0xe7, 0x81 },
  { 0x00, 0x40, 0x00, 0x7e, 0x81, 0xe7, 0x81, 0x91 },
  { 0x00, 0x50, 0x00, 0x00, 0x7e, 0x81, 0xe7, 0x81 },
  { 0x00, 0x54, 0x00, 0x7e, 0x81, 0xe7, 0x81, 0x91 }
};

byte IDLE_SEQUENCE[4][8] = {
  { 0x7e, 0x81, 0xa5, 0x99, 0x81, 0x7e, 0x00, 0x00 },
  { 0x00, 0x7e, 0x81, 0xa5, 0x99, 0x81, 0x7e, 0x00 },
  { 0x00, 0x00, 0x7e, 0x81, 0xa5, 0x99, 0x81, 0x7e },
  { 0x00, 0x7e, 0x81, 0xa5, 0x99, 0x81, 0x7e, 0x00 }
};

byte EXCITED_SEQUENCE[4][8] = {
  { 0x00, 0x7e, 0x81, 0xa5, 0x99, 0x81, 0x7e, 0x00 },
  { 0x3c, 0x42, 0x66, 0x42, 0x5a, 0x42, 0x42, 0x3c },
  { 0x00, 0x7e, 0x81, 0xa5, 0x99, 0x81, 0x7e, 0x00 },
  { 0x3c, 0x42, 0x66, 0x42, 0x5a, 0x42, 0x42, 0x3c }
};

byte LOOK_SEQUENCE[4][8] = {
  { 0x00, 0x7e, 0x81, 0xa5, 0x81, 0x81, 0x7e, 0x00 },
  { 0x00, 0x7e, 0x81, 0xc9, 0x81, 0x81, 0x7e, 0x00 },
  { 0x00, 0x7e, 0x81, 0xa5, 0x81, 0x81, 0x7e, 0x00 },
  { 0x00, 0x7e, 0x81, 0x93, 0x81, 0x81, 0x7e, 0x00 },
};

byte HAPPY_SEQUENCE[4][8] = {
  { 0x00, 0x7e, 0xa5, 0x81, 0xa5, 0x99, 0x7e, 0x00 },
  { 0x00, 0x7e, 0xa5, 0x81, 0x99, 0x81, 0x7e, 0x00 },
  { 0x00, 0x7e, 0xa5, 0x81, 0xa5, 0x99, 0x7e, 0x00 },
  { 0x00, 0x7e, 0xa5, 0x81, 0x99, 0x81, 0x7e, 0x00 },
};

byte UNHAPPY_SEQUENCE[4][8] = {
  { 0x00, 0x7e, 0xa5, 0x81, 0x99, 0xa5, 0x7e, 0x00 },
  { 0x00, 0x7e, 0xa5, 0x81, 0x99, 0x81, 0x7e, 0x00 },
  { 0x00, 0x7e, 0xa5, 0x81, 0x99, 0xa5, 0x7e, 0x00 },
  { 0x00, 0x7e, 0xa5, 0x81, 0x99, 0x81, 0x7e, 0x00 },
};

byte ROLL_SEQUENCE[4][8] = {
  { 0x00, 0x7e, 0x81, 0xa5, 0x99, 0x81, 0x7e, 0x00 },
  { 0x3c, 0x42, 0x4a, 0x52, 0x52, 0x4a, 0x42, 0x3c },
  { 0x00, 0x7e, 0x81, 0x99, 0xa5, 0x81, 0x7e, 0x00 },
  { 0x3c, 0x42, 0x52, 0x4a, 0x4a, 0x52, 0x42, 0x3c },
};

byte OK_SEQUENCE[4][8] = {
  { 0xe5, 0xa6, 0xe5, 0x00, 0x7e, 0x81, 0xa5, 0x99 },
  { 0xe5, 0xa6, 0xe5, 0x00, 0x00, 0x7e, 0x81, 0xa5 },
  { 0xe5, 0xa6, 0xe5, 0x00, 0x7e, 0x81, 0xa5, 0x99 },
  { 0xe5, 0xa6, 0xe5, 0x00, 0x00, 0x7e, 0x81, 0xa5 },
};

byte NO_SEQUENCE[4][8] = {
  { 0x97, 0xd5, 0xb7, 0x00, 0x7e, 0x81, 0x93, 0x8d },
  { 0x97, 0xd5, 0xb7, 0x00, 0x7e, 0x81, 0xc9, 0xb1 },
  { 0x97, 0xd5, 0xb7, 0x00, 0x7e, 0x81, 0x93, 0x8d },
  { 0x97, 0xd5, 0xb7, 0x00, 0x7e, 0x81, 0xc9, 0xb1 },
};

// Set sequence to start displaying
void setSequence(byte frameArray[][8], int framerateInt) {
  for(uint8_t x = 0; x < 4; x++) {
    for(uint8_t y = 0; y < 8; y++) {
      sequence[x][y] = frameArray[x][y];
    }
  }
  framerate = framerateInt;
  currentFrame = 0;
}

void goIdle() {
  setSequence(IDLE_SEQUENCE, 700);
  isIdle = true;
  isSleeping = false;
  isActionEvent = false;
  isRandomEvent = false;
}

void goToSleep() {
  setSequence(SLEEP_SEQUENCE, 1500);
  isIdle = false;
  isSleeping = true;
  isActionEvent = false;
  isRandomEvent = false;  
}

void excited() {
  setSequence(EXCITED_SEQUENCE, 700);
}

void happy() {
  setSequence(HAPPY_SEQUENCE, 700);
}

void unhappy() {
  setSequence(UNHAPPY_SEQUENCE, 900);
}

void look() {
  setSequence(LOOK_SEQUENCE, 1000);
}

void roll() {
  setSequence(ROLL_SEQUENCE, 400);
}

void ok() {
  setSequence(OK_SEQUENCE, 500);
}

void no() {
  setSequence(NO_SEQUENCE, 500);
}

void rain() {
  setSequence(RAIN_SEQUENCE, 200);
}

void eat() {
  setSequence(EAT_SEQUENCE, 1000);
}
